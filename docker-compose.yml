version: "3.8"

services:
  # MySQL Database
  db:
    image: mysql:8.0
    container_name: mysql_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: shinomoto926!
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: curriculum-portal
      MYSQL_INITDB_SKIP_TZINFO: 1
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    networks:
      - app-network
    command: >
      --default-authentication-plugin=mysql_native_password
      --innodb-buffer-pool-size=256M
      --max-connections=100
      --default-time-zone=+09:00
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-pshinomoto926!"]
      timeout: 30s
      retries: 20
      interval: 20s
      start_period: 120s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Node.js Application
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: express_app
    restart: always
    ports:
      - "5000:5000"
    environment:
      - DB_HOST=db
      - DB_USER=root
      - DB_PASSWORD=shinomoto926!
      - DB_NAME=curriculum-portal
      - DB_PORT=3306
      - NODE_ENV=development
      - PORT=5000
      - FRONTEND_URL=http://localhost:3000
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION:-ap-northeast-1}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET:-studysphere}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./backend:/app
      - node_modules:/app/node_modules
    healthcheck:
      test: [
        "CMD",
        "wget",
        "--no-verbose",
        "--tries=1",
        "--spider",
        "http://localhost:5000/"
      ]
      timeout: 10s
      retries: 5
      interval: 30s
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  mysql_data:
    driver: local
  node_modules:
    driver: local

networks:
  app-network:
    driver: bridge
